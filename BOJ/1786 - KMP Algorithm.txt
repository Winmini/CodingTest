import sys


def kmp_search(pat, txt):
    M = len(pat)
    N = len(txt)
    lps = [0]*M
    compute_lps(pat, lps)
    i = 0
    j = 0
    while i < N:
        if pat[j] == txt[i]:
            i += 1
            j += 1
        elif pat[j] != txt[i]:
            if j != 0:
                j = lps[j-1]
            else:
                i += 1
        if j == M:
            answer.append(i-j+1)
            j = lps[j-1]


def compute_lps(pat, lps):
    leng = 0
    i = 1
    while i < len(pat):
        if pat[i] == pat[leng]:
            leng += 1
            lps[i] = leng
            i += 1
        else:
            if leng != 0:
                leng = lps[leng-1]
            else:
                lps[i] = 0
                i += 1


T = sys.stdin.readline().split('\n')[0]
P = sys.stdin.readline().split('\n')[0]
answer = []
kmp_search(P, T)
print(len(answer))
for i in answer:
    print(i, end=' ')